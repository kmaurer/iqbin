% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IterativeQuantileNearestNeighbors.R
\name{iqnn_predict}
\alias{iqnn_predict}
\title{Predict for test data using iqnn model}
\usage{
iqnn_predict(iqnn_mod, test_data, type = "estimate", strict = FALSE)
}
\arguments{
\item{iqnn_mod}{iterative quantile nearest neighbors model generated by the \code{\link{iqnn}} function}

\item{test_data}{Data frame of test data to estimate response values for}

\item{type}{output "estimate", "binsize", or "both"}

\item{strict}{TRUE/FALSE: If TRUE Observations must fall within existing bins to be assigned; if FALSE the outer bins in each dimension are unbounded to allow outlying values to be assigned.}
}
\value{
predicted responses, number of neighbors or both
}
\description{
Predict the response value for test data using iqnn model defined using training data from the \code{\link{iqnn}} function
}
\examples{
# Test Regression
test_index <- c(1,2,51,52,101,102)
iqnn_mod <- iqnn(data=iris[-test_index,], y="Petal.Length", bin_cols=c("Sepal.Length","Sepal.Width","Petal.Width"), nbins=c(3,5,2), jit=rep(0.001,3), stretch=TRUE, tol=rep(.001,3))
test_data <- iris[test_index,]
iqnn_predict(iqnn_mod, test_data,strict=FALSE)
iqnn_predict(iqnn_mod, test_data,strict=TRUE)
iqnn_predict(iqnn_mod, test_data,type="both")

# Test Classifier
iqnn_mod <- iqnn(data=iris[-test_index,], y="Species", mod_type="class", bin_cols=c("Sepal.Length","Sepal.Width","Petal.Width"), nbins=c(3,5,2), jit=rep(0.001,3))
test_data <- iris[test_index,]
iqnn_predict(iqnn_mod, test_data,strict=TRUE)
iqnn_predict(iqnn_mod, test_data,type="both",strict=FALSE)
}
\seealso{
Other iterative quantile nearest-neighbors functions: \code{\link{iqnn_cv_predict}},
  \code{\link{iqnn_tune}}, \code{\link{iqnn}}
}
\concept{iterative quantile nearest-neighbors functions}
