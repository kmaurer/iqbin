% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IterativeQuantileSupportFunctions.R
\name{bin_index_finder_nest}
\alias{bin_index_finder_nest}
\title{Find bin index from R-tree structure}
\usage{
bin_index_finder_nest(x, bin_def, strict = TRUE)
}
\arguments{
\item{x}{vector of input values for each of the binned dimensions}

\item{bin_def}{Iterative quantile binning definition list}

\item{strict}{TRUE/FALSE: If TRUE Observations must fall within existing bins to be assigned; if FALSE the outer bins in each dimension are unbounded to allow outlying values to be assigned.}
}
\value{
bin index for new observation
}
\description{
Use R-tree structure using from make_bin_list() function to find bin index for new observation
}
\examples{
iq_def <- iterative_quant_bin(data=iris[-test_index,], bin_cols=c("Sepal.Length","Sepal.Width","Petal.Width"),
                              nbins=c(3,2,2), output="both")
bin_index_finder_nest(x=c(6,3,1.5),bin_def=iq_def$bin_def, strict=TRUE)
}
